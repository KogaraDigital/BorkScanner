name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # Use explicit path for csproj since project is now in src/
      - name: Restore dependencies
        run: dotnet restore src/BorkScanner.csproj

      - name: Build and publish
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            dotnet publish src/BorkScanner.csproj -c Release -r linux-x64 --self-contained -o ./publish/linux
          else
            dotnet publish src/BorkScanner.csproj -c Release -r win-x64 --self-contained -o ./publish/windows
          fi
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: publish/
          compression-level: 9

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Install zip
        run: |
          sudo apt-get update
          sudo apt-get install -y zip

      - name: Create ZIP archives
        run: |
          mkdir -p release-files
          # Linux build
          if [ -d "artifacts/ubuntu-latest-build/linux" ]; then
            cd artifacts/ubuntu-latest-build/linux
            zip -r ../../../release-files/BorkScanner-linux-x64.zip ./*
            cd ../../..
          else
            echo "Warning: Linux build directory not found"
          fi
          
          # Windows build
          if [ -d "artifacts/windows-latest-build/windows" ]; then
            cd artifacts/windows-latest-build/windows
            zip -r ../../../release-files/BorkScanner-windows-x64.zip ./*
            cd ../../..
          else
            echo "Warning: Windows build directory not found"
          fi

      - name: Create GitHub release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            release-files/BorkScanner-windows-x64.zip
            release-files/BorkScanner-linux-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nuget:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # Use explicit path for csproj since project is now in src/
      - name: Restore dependencies
        run: dotnet restore src/BorkScanner.csproj

      - name: Pack NuGet
        run: dotnet pack src/BorkScanner.csproj -c Release -o ./nupkg

      - name: Push to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
