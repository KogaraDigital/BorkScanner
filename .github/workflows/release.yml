name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Find .csproj
        id: find_csproj
        run: echo "CSProj=$(find . -name '*.csproj' | head -n 1)" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore ${{ env.CSProj }}

      - name: Build and publish
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            dotnet publish ${{ env.CSProj }} -c Release -r linux-x64 --self-contained -o ./publish/linux
          else
            dotnet publish ${{ env.CSProj }} -c Release -r win-x64 --self-contained -o ./publish/windows
          fi
        shell: bash

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows executable
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/windows/BorkScanner.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux executable
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/linux/BorkScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nuget:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Find .csproj
        id: find_csproj
        run: echo "CSProj=$(find . -name '*.csproj' | head -n 1)" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore ${{ env.CSProj }}

      - name: Pack NuGet
        run: dotnet pack ${{ env.CSProj }} -c Release -o ./nupkg

      - name: Push to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
